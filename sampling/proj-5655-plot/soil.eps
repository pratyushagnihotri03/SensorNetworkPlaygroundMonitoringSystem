%!PS-Adobe-2.0 EPSF-2.0
%%Title: soil.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Mon Mar  3 16:40:50 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 770 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (soil.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (user)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar  3 16:40:50 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 770 50 lineto 770 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
770 742 M
63 0 V
stroke
686 742 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 38)]
] -46.7 MRshow
1.000 UL
LTb
770 1258 M
63 0 V
stroke
686 1258 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 38.5)]
] -46.7 MRshow
1.000 UL
LTb
770 1774 M
63 0 V
stroke
686 1774 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 39)]
] -46.7 MRshow
1.000 UL
LTb
770 2290 M
63 0 V
stroke
686 2290 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 39.5)]
] -46.7 MRshow
1.000 UL
LTb
770 2807 M
63 0 V
stroke
686 2807 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
770 3323 M
63 0 V
stroke
686 3323 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40.5)]
] -46.7 MRshow
1.000 UL
LTb
770 3839 M
63 0 V
stroke
686 3839 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 41)]
] -46.7 MRshow
1.000 UL
LTb
770 4355 M
63 0 V
stroke
686 4355 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 41.5)]
] -46.7 MRshow
1.000 UL
LTb
770 4871 M
63 0 V
stroke
686 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 42)]
] -46.7 MRshow
1.000 UL
LTb
770 742 M
0 63 V
0 4066 R
0 -63 V
stroke
770 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (19:51:00)]
] -46.7 MCshow
1.000 UL
LTb
1192 742 M
0 31 V
0 4098 R
0 -31 V
1613 742 M
0 31 V
0 4098 R
0 -31 V
2035 742 M
0 63 V
0 4066 R
0 -63 V
stroke
2035 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (19:54:00)]
] -46.7 MCshow
1.000 UL
LTb
2456 742 M
0 31 V
0 4098 R
0 -31 V
2878 742 M
0 31 V
0 4098 R
0 -31 V
3300 742 M
0 63 V
0 4066 R
0 -63 V
stroke
3300 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (19:57:00)]
] -46.7 MCshow
1.000 UL
LTb
3721 742 M
0 31 V
0 4098 R
0 -31 V
4143 742 M
0 31 V
0 4098 R
0 -31 V
4564 742 M
0 63 V
0 4066 R
0 -63 V
stroke
4564 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:00:00)]
] -46.7 MCshow
1.000 UL
LTb
4986 742 M
0 31 V
0 4098 R
0 -31 V
5408 742 M
0 31 V
0 4098 R
0 -31 V
5829 742 M
0 63 V
0 4066 R
0 -63 V
stroke
5829 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:03:00)]
] -46.7 MCshow
1.000 UL
LTb
6251 742 M
0 31 V
0 4098 R
0 -31 V
6672 742 M
0 31 V
0 4098 R
0 -31 V
7094 742 M
0 63 V
0 4066 R
0 -63 V
stroke
7094 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:06:00)]
] -46.7 MCshow
1.000 UL
LTb
7516 742 M
0 31 V
0 4098 R
0 -31 V
7937 742 M
0 31 V
0 4098 R
0 -31 V
8359 742 M
0 63 V
0 4066 R
0 -63 V
stroke
8359 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:09:00)]
] -46.7 MCshow
1.000 UL
LTb
8780 742 M
0 31 V
0 4098 R
0 -31 V
9202 742 M
0 31 V
0 4098 R
0 -31 V
9624 742 M
0 63 V
0 4066 R
0 -63 V
stroke
9624 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:12:00)]
] -46.7 MCshow
1.000 UL
LTb
10045 742 M
0 31 V
0 4098 R
0 -31 V
10467 742 M
0 31 V
0 4098 R
0 -31 V
10888 742 M
0 63 V
0 4066 R
0 -63 V
stroke
10888 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:15:00)]
] -46.7 MCshow
1.000 UL
LTb
11310 742 M
0 31 V
0 4098 R
0 -31 V
11732 742 M
0 31 V
0 4098 R
0 -31 V
12153 742 M
0 63 V
0 4066 R
0 -63 V
stroke
12153 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:18:00)]
] -46.7 MCshow
1.000 UL
LTb
12575 742 M
0 31 V
0 4098 R
0 -31 V
12996 742 M
0 31 V
0 4098 R
0 -31 V
13418 742 M
0 63 V
0 4066 R
0 -63 V
stroke
13418 602 M
[ [(Helvetica) 140.0 0.0 true true 0 (20:21:00)]
] -46.7 MCshow
1.000 UL
LTb
13418 742 M
-63 0 V
stroke
13502 742 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 38)]
] -46.7 MLshow
1.000 UL
LTb
13418 1258 M
-63 0 V
stroke
13502 1258 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 38.5)]
] -46.7 MLshow
1.000 UL
LTb
13418 1774 M
-63 0 V
stroke
13502 1774 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 39)]
] -46.7 MLshow
1.000 UL
LTb
13418 2290 M
-63 0 V
stroke
13502 2290 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 39.5)]
] -46.7 MLshow
1.000 UL
LTb
13418 2807 M
-63 0 V
stroke
13502 2807 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MLshow
1.000 UL
LTb
13418 3323 M
-63 0 V
stroke
13502 3323 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40.5)]
] -46.7 MLshow
1.000 UL
LTb
13418 3839 M
-63 0 V
stroke
13502 3839 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 41)]
] -46.7 MLshow
1.000 UL
LTb
13418 4355 M
-63 0 V
stroke
13502 4355 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 41.5)]
] -46.7 MLshow
1.000 UL
LTb
13418 4871 M
-63 0 V
stroke
13502 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 42)]
] -46.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
770 4871 N
770 742 L
12648 0 V
0 4129 V
770 4871 L
Z stroke
LCb setrgbcolor
112 2806 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Threshold value [ADC])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
14075 2806 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Threshold value [unit])]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
7094 392 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time [min])]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
6517 63 N
0 154 V
1154 0 V
0 -154 V
6517 63 L
Z stroke
6517 217 M
1154 0 V
% Begin plot #1
stroke
2.000 UL
LT0
0.00 1.00 1.00 C LCb setrgbcolor
7105 140 M
[ [(Arial) 140.0 0.0 true true 0 (Time)]
] -46.7 MRshow
LT0
0.00 1.00 1.00 C 7189 140 M
399 0 V
1494 3736 M
35 -723 V
35 -103 V
35 826 V
35 -465 V
35 124 V
36 -1239 V
35 0 V
35 1580 V
35 51 V
35 -175 V
35 -682 V
35 320 V
35 -134 V
36 196 V
35 -536 V
35 -1342 V
35 1889 V
35 -1053 V
35 1146 V
35 278 V
36 -537 V
35 -929 V
35 1022 V
35 692 V
35 -506 V
35 -258 V
35 -1424 V
35 1734 V
36 -31 V
35 196 V
35 -950 V
35 754 V
35 -279 V
35 -888 V
35 1002 V
36 -83 V
35 -52 V
35 300 V
35 72 V
35 299 V
35 -505 V
35 -331 V
35 217 V
36 114 V
35 -1962 V
35 3200 V
35 -1548 V
35 310 V
35 -331 V
35 300 V
36 474 V
35 -2632 V
35 2240 V
35 -1104 V
35 1063 V
35 433 V
35 -278 V
35 299 V
36 -857 V
35 806 V
35 -1435 V
35 2260 V
35 -991 V
35 -1342 V
35 1280 V
36 -1063 V
35 114 V
35 1011 V
35 -82 V
35 41 V
35 -175 V
35 -1157 V
35 816 V
36 495 V
35 -185 V
35 -1022 V
35 216 V
35 1838 V
35 -960 V
35 -661 V
36 620 V
35 433 V
35 -1672 V
35 1063 V
35 114 V
35 196 V
35 -434 V
35 -351 V
36 1105 V
35 -774 V
35 -1280 V
35 1424 V
35 588 V
35 -712 V
35 1714 V
36 -1755 V
35 -568 V
35 -155 V
35 1043 V
35 361 V
35 -206 V
35 -1115 V
stroke 5077 2373 M
35 -145 V
36 806 V
35 -62 V
35 764 V
35 -166 V
35 -939 V
35 877 V
35 -278 V
36 918 V
35 -970 V
35 372 V
35 -558 V
35 331 V
35 206 V
35 -537 V
35 0 V
36 774 V
35 -309 V
35 -1167 V
35 723 V
35 557 V
35 -62 V
35 -299 V
36 -692 V
35 713 V
35 -1291 V
35 837 V
35 1992 V
35 -3190 V
35 2075 V
35 -1166 V
36 908 V
35 -475 V
35 795 V
35 -795 V
35 908 V
35 -1341 V
35 1249 V
36 51 V
35 -1486 V
35 929 V
35 598 V
35 -578 V
35 73 V
35 413 V
35 -682 V
36 -392 V
35 867 V
35 0 V
35 279 V
42 -795 V
28 341 V
35 1001 V
36 -1765 V
35 464 V
35 103 V
35 -567 V
35 -362 V
35 -1197 V
35 2725 V
35 -227 V
36 -72 V
35 72 V
35 83 V
35 -702 V
35 103 V
35 774 V
35 -464 V
36 -393 V
35 21 V
35 506 V
35 -361 V
35 1259 V
35 -867 V
35 -434 V
35 -392 V
36 630 V
35 41 V
35 1022 V
35 -2674 V
35 1497 V
35 -21 V
35 -743 V
36 816 V
35 -496 V
35 258 V
35 620 V
35 -878 V
35 1074 V
35 -1363 V
35 114 V
36 557 V
35 155 V
35 -299 V
35 258 V
35 82 V
35 -134 V
35 -103 V
36 -1425 V
35 -258 V
35 2550 V
35 -2436 V
35 1703 V
35 114 V
stroke 8731 3323 M
35 -909 V
35 362 V
36 960 V
35 -2013 V
35 1631 V
35 474 V
35 -712 V
35 83 V
35 588 V
36 -217 V
35 -836 V
35 258 V
35 -258 V
35 537 V
35 -2168 V
35 2313 V
35 -104 V
36 -753 V
35 -258 V
35 1641 V
35 -289 V
35 -423 V
35 -217 V
35 237 V
36 362 V
35 -42 V
35 -413 V
35 475 V
35 -82 V
35 -2416 V
35 3014 V
35 -1414 V
36 -31 V
35 -186 V
35 -30 V
35 -114 V
35 857 V
35 -114 V
35 413 V
36 -495 V
35 20 V
35 -537 V
35 1095 V
35 -362 V
35 -474 V
35 -42 V
35 1002 V
36 0 V
42 -1466 V
28 784 V
35 423 V
35 289 V
35 -567 V
35 -62 V
36 -227 V
35 62 V
35 -413 V
35 31 V
35 -506 V
35 1208 V
35 -1322 V
35 1683 V
36 41 V
35 -361 V
35 144 V
35 -1434 V
35 1548 V
35 -83 V
35 -918 V
36 320 V
35 -320 V
35 361 V
35 -506 V
35 -103 V
35 1053 V
35 960 V
35 -2271 V
36 1053 V
35 1011 V
35 -1920 V
35 475 V
35 331 V
35 681 V
35 -599 V
36 -919 V
35 1745 V
35 -908 V
35 340 V
35 42 V
35 -217 V
35 -165 V
35 258 V
36 536 V
35 -371 V
35 -382 V
35 -41 V
35 -114 V
35 609 V
35 -72 V
36 -134 V
35 413 V
35 -1363 V
35 -1094 V
35 258 V
stroke 12385 1537 M
35 1837 V
35 362 V
35 -1539 V
36 1053 V
35 506 V
35 -20 V
35 -702 V
35 165 V
35 -62 V
35 -21 V
36 -960 V
35 940 V
35 619 V
35 -382 V
35 -888 V
35 72 V
35 640 V
35 475 V
36 -640 V
35 537 V
35 -155 V
35 392 V
35 -650 V
% End plot #1
stroke
1.000 UL
LTb
770 4871 N
770 742 L
12648 0 V
0 4129 V
770 4871 L
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial Helvetica
